










_RINvCsjlXeteWlWiC_6nquads5parseARShj1_EB2_:
    7|  18.4k|fn parse<'a>(
    8|  18.4k|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|  18.4k|    unchecked: bool,
   10|  18.4k|) -> (Vec<Quad>, Vec<String>) {
   11|  18.4k|    let mut quads = Vec::new();
   12|  18.4k|    let mut errors = Vec::new();
   13|  18.4k|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|  18.4k|    if unchecked {
   15|      0|        parser = parser.unchecked();
   16|  18.4k|    }
   17|  18.4k|    let mut reader = parser.parse();
   18|  36.9k|    for chunk in chunks {
   19|  18.4k|        reader.extend_from_slice(chunk);
   20|  1.34M|        while let Some(result) = reader.read_next() {
   21|  1.33M|            match result {
   22|  85.4k|                Ok(quad) => quads.push(quad),
   23|  1.24M|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|  18.4k|    reader.end();
   28|  30.4k|    while let Some(result) = reader.read_next() {
   29|  11.9k|        match result {
   30|  1.23k|            Ok(quad) => quads.push(quad),
   31|  10.7k|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|  18.4k|    assert!(reader.is_end());
   35|  18.4k|    (quads, errors)
   36|  18.4k|}
_RINvCsjlXeteWlWiC_6nquads5parseINtNtNtCscdEvteftVc2_4core5slice4iter5SplithNCNvNvB2_1__19___libfuzzer_sys_run0EEB2_:
    7|  18.4k|fn parse<'a>(
    8|  18.4k|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|  18.4k|    unchecked: bool,
   10|  18.4k|) -> (Vec<Quad>, Vec<String>) {
   11|  18.4k|    let mut quads = Vec::new();
   12|  18.4k|    let mut errors = Vec::new();
   13|  18.4k|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|  18.4k|    if unchecked {
   15|      0|        parser = parser.unchecked();
   16|  18.4k|    }
   17|  18.4k|    let mut reader = parser.parse();
   18|  3.01M|    for chunk in chunks {
   19|  2.99M|        reader.extend_from_slice(chunk);
   20|  4.32M|        while let Some(result) = reader.read_next() {
   21|  1.33M|            match result {
   22|  85.4k|                Ok(quad) => quads.push(quad),
   23|  1.24M|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|  18.4k|    reader.end();
   28|  30.4k|    while let Some(result) = reader.read_next() {
   29|  11.9k|        match result {
   30|  1.23k|            Ok(quad) => quads.push(quad),
   31|  10.7k|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|  18.4k|    assert!(reader.is_end());
   35|  18.4k|    (quads, errors)
   36|  18.4k|}
_RINvCsjlXeteWlWiC_6nquads5parseINtNtNtCscdEvteftVc2_4core5slice4iter5SplithNCNvNvB2_1__19___libfuzzer_sys_runs0_0EEB2_:
    7|    352|fn parse<'a>(
    8|    352|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|    352|    unchecked: bool,
   10|    352|) -> (Vec<Quad>, Vec<String>) {
   11|    352|    let mut quads = Vec::new();
   12|    352|    let mut errors = Vec::new();
   13|    352|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|    352|    if unchecked {
   15|    352|        parser = parser.unchecked();
   16|    352|    }
   17|    352|    let mut reader = parser.parse();
   18|  17.0k|    for chunk in chunks {
   19|  16.6k|        reader.extend_from_slice(chunk);
   20|  18.7k|        while let Some(result) = reader.read_next() {
   21|  2.08k|            match result {
   22|  2.08k|                Ok(quad) => quads.push(quad),
   23|      0|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|    352|    reader.end();
   28|    414|    while let Some(result) = reader.read_next() {
   29|     62|        match result {
   30|     62|            Ok(quad) => quads.push(quad),
   31|      0|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|    352|    assert!(reader.is_end());
   35|    352|    (quads, errors)
   36|    352|}
_RNCNvNvCsjlXeteWlWiC_6nquads1__19___libfuzzer_sys_run0B5_:
   40|  12.0M|    let (quads, errors) = parse(data.split(|c| *c == 0xFF), false);
_RNCNvNvCsjlXeteWlWiC_6nquads1__19___libfuzzer_sys_runs_0B5_:
   46|  12.0M|            .filter(|c| *c != 0xFF)
_RNCNvNvCsjlXeteWlWiC_6nquads1__19___libfuzzer_sys_runs0_0B5_:
   56|  70.1k|        let (quads_unchecked, errors_unchecked) = parse(data.split(|c| *c == 0xFF), true);











