










_RINvCs7kLWDCoWyN_6nquads5parseARShj1_EB2_:
    7|  18.6k|fn parse<'a>(
    8|  18.6k|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|  18.6k|    unchecked: bool,
   10|  18.6k|) -> (Vec<Quad>, Vec<String>) {
   11|  18.6k|    let mut quads = Vec::new();
   12|  18.6k|    let mut errors = Vec::new();
   13|  18.6k|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|  18.6k|    if unchecked {
   15|      0|        parser = parser.unchecked();
   16|  18.6k|    }
   17|  18.6k|    let mut reader = parser.parse();
   18|  37.2k|    for chunk in chunks {
   19|  18.6k|        reader.extend_from_slice(chunk);
   20|  1.36M|        while let Some(result) = reader.read_next() {
   21|  1.34M|            match result {
   22|  86.3k|                Ok(quad) => quads.push(quad),
   23|  1.26M|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|  18.6k|    reader.end();
   28|  30.7k|    while let Some(result) = reader.read_next() {
   29|  12.1k|        match result {
   30|  1.24k|            Ok(quad) => quads.push(quad),
   31|  10.8k|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|  18.6k|    assert!(reader.is_end());
   35|  18.6k|    (quads, errors)
   36|  18.6k|}
_RINvCs7kLWDCoWyN_6nquads5parseINtNtNtCscdEvteftVc2_4core5slice4iter5SplithNCNvNvB2_1__19___libfuzzer_sys_run0EEB2_:
    7|  18.6k|fn parse<'a>(
    8|  18.6k|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|  18.6k|    unchecked: bool,
   10|  18.6k|) -> (Vec<Quad>, Vec<String>) {
   11|  18.6k|    let mut quads = Vec::new();
   12|  18.6k|    let mut errors = Vec::new();
   13|  18.6k|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|  18.6k|    if unchecked {
   15|      0|        parser = parser.unchecked();
   16|  18.6k|    }
   17|  18.6k|    let mut reader = parser.parse();
   18|  3.05M|    for chunk in chunks {
   19|  3.03M|        reader.extend_from_slice(chunk);
   20|  4.38M|        while let Some(result) = reader.read_next() {
   21|  1.34M|            match result {
   22|  86.3k|                Ok(quad) => quads.push(quad),
   23|  1.26M|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|  18.6k|    reader.end();
   28|  30.7k|    while let Some(result) = reader.read_next() {
   29|  12.1k|        match result {
   30|  1.24k|            Ok(quad) => quads.push(quad),
   31|  10.8k|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|  18.6k|    assert!(reader.is_end());
   35|  18.6k|    (quads, errors)
   36|  18.6k|}
_RINvCs7kLWDCoWyN_6nquads5parseINtNtNtCscdEvteftVc2_4core5slice4iter5SplithNCNvNvB2_1__19___libfuzzer_sys_runs0_0EEB2_:
    7|    353|fn parse<'a>(
    8|    353|    chunks: impl IntoIterator<Item = &'a [u8]>,
    9|    353|    unchecked: bool,
   10|    353|) -> (Vec<Quad>, Vec<String>) {
   11|    353|    let mut quads = Vec::new();
   12|    353|    let mut errors = Vec::new();
   13|    353|    let mut parser = NQuadsParser::new().with_quoted_triples();
   14|    353|    if unchecked {
   15|    353|        parser = parser.unchecked();
   16|    353|    }
   17|    353|    let mut reader = parser.parse();
   18|  17.0k|    for chunk in chunks {
   19|  16.6k|        reader.extend_from_slice(chunk);
   20|  18.7k|        while let Some(result) = reader.read_next() {
   21|  2.08k|            match result {
   22|  2.08k|                Ok(quad) => quads.push(quad),
   23|      0|                Err(error) => errors.push(error.to_string()),
   24|       |            }
   25|       |        }
   26|       |    }
   27|    353|    reader.end();
   28|    416|    while let Some(result) = reader.read_next() {
   29|     63|        match result {
   30|     63|            Ok(quad) => quads.push(quad),
   31|      0|            Err(error) => errors.push(error.to_string()),
   32|       |        }
   33|       |    }
   34|    353|    assert!(reader.is_end());
   35|    353|    (quads, errors)
   36|    353|}
_RNCNvNvCs7kLWDCoWyN_6nquads1__19___libfuzzer_sys_run0B5_:
   40|  12.2M|    let (quads, errors) = parse(data.split(|c| *c == 0xFF), false);
_RNCNvNvCs7kLWDCoWyN_6nquads1__19___libfuzzer_sys_runs_0B5_:
   46|  12.2M|            .filter(|c| *c != 0xFF)
_RNCNvNvCs7kLWDCoWyN_6nquads1__19___libfuzzer_sys_runs0_0B5_:
   56|  70.1k|        let (quads_unchecked, errors_unchecked) = parse(data.split(|c| *c == 0xFF), true);











